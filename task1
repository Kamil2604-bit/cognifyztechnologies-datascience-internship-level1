#LEVEL:1 Task :1  Data Exploration and Preprocessing
# Import necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset
file_path = r'C:\Users\LENOVO\Downloads\Dataset .csv'  
df = pd.read_csv(file_path)

# 1. Check the shape of the dataset
rows, cols = df.shape
print(f"Number of Rows: {rows}")
print(f"Number of Columns: {cols}")

# 2. Check for missing values
missing_values = df.isnull().sum()
missing_percent = (missing_values / len(df)) * 100
print("\nMissing Values in Each Column:")
print(missing_values)
print("\nPercentage of Missing Values:")
print(missing_percent)

# Fill missing values: Numeric columns with median, categorical columns with mode
df.fillna({
    col: df[col].median() if df[col].dtype in ['int64', 'float64'] else df[col].mode()[0]
    for col in df.columns
}, inplace=True)

# 3. Check and convert data types if necessary
for col in df.columns:
    if df[col].dtype == 'object':
        try:
            df[col] = pd.to_numeric(df[col], errors='coerce')
        except ValueError:
            pass

# 4. Analyze the distribution of the target variable
target_column = "Aggregate rating"

if target_column in df.columns:
    print(f"\nDistribution of '{target_column}':")
    print(df[target_column].value_counts())

    # Plot the distribution
    plt.figure(figsize=(10, 6))
    sns.histplot(df[target_column], bins=15, kde=True)
    plt.title(f"Distribution of {target_column}")
    plt.xlabel(target_column)
    plt.ylabel("Frequency")
    plt.show()

    # Plot class distribution (if it's for classification)
    plt.figure(figsize=(10, 6))
    df[target_column].value_counts().plot(kind='bar', color='skyblue')
    plt.title(f"Class Distribution of {target_column}")
    plt.xlabel("Ratings")
    plt.ylabel("Count")
    plt.show()
else:
    print(f"Target column '{target_column}' not found in the dataset.")

# 5. Save the cleaned dataset
cleaned_file_path = r"C:\Users\LENOVO\Cleaned_Dataset.csv"  # Use raw string for the path
df.to_csv(cleaned_file_path, index=False)
print(f"\nCleaned dataset saved to {cleaned_file_path}")







